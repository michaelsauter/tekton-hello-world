---
apiVersion: build.openshift.io/v1
kind: BuildConfig
metadata:
  labels:
    app: tekton-hello-world
  name: tekton-hello-world
spec:
  failedBuildsHistoryLimit: 5
  nodeSelector: null
  output:
    to:
      kind: ImageStreamTag
      name: 'tekton-hello-world:latest'
  postCommit: {}
  resources: {}
  runPolicy: Serial
  source:
    binary: {}
    type: Binary
  strategy:
    dockerStrategy: {}
    type: Docker
  successfulBuildsHistoryLimit: 5
  triggers: []
---
apiVersion: image.openshift.io/v1
kind: ImageStream
metadata:
  labels:
    app: tekton-hello-world
  name: tekton-hello-world
---
apiVersion: apps.openshift.io/v1
kind: DeploymentConfig
metadata:
  labels:
    app: tekton-hello-world
  name: tekton-hello-world
spec:
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    app: tekton-hello-world
    deploymentconfig: tekton-hello-world
  strategy:
    activeDeadlineSeconds: 21600
    resources: {}
    rollingParams:
      intervalSeconds: 1
      maxSurge: 25%
      maxUnavailable: 25%
      timeoutSeconds: 600
      updatePeriodSeconds: 1
    type: Rolling
  template:
    metadata:
      labels:
        app: tekton-hello-world
        deploymentconfig: tekton-hello-world
    spec:
      containers:
      - image: 172.30.1.1:5000/pipelines-tutorial/tekton-hello-world:latest
        imagePullPolicy: Always
        livenessProbe:
          failureThreshold: 3
          httpGet:
            path: /health
            port: 8080
            scheme: HTTP
          initialDelaySeconds: 45
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 1
        name: tekton-hello-world
        ports:
        - containerPort: 8080
          protocol: TCP
        readinessProbe:
          failureThreshold: 3
          httpGet:
            path: /health
            port: 8080
            scheme: HTTP
          initialDelaySeconds: 10
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 5
        resources: {}
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      terminationGracePeriodSeconds: 30
  test: false
  triggers: []
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: tekton-hello-world
  name: tekton-hello-world
spec:
  ports:
  - name: 8080-tcp
    port: 8080
    protocol: TCP
    targetPort: 8080
  selector:
    app: tekton-hello-world
    deploymentconfig: tekton-hello-world
  sessionAffinity: None
  type: ClusterIP
---
apiVersion: route.openshift.io/v1
kind: Route
metadata:
  labels:
    app: tekton-hello-world
  name: tekton-hello-world
spec:
  port:
    targetPort: 8080-tcp
  to:
    kind: Service
    name: tekton-hello-world
    weight: 100
